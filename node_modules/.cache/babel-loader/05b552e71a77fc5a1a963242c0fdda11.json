{"ast":null,"code":"var _jsxFileName = \"/Users/zhigangdeng/Projects/react-stock-dashboard/src/components/FilterCard.js\";\nimport React from 'react';\nimport '../css/styles.css';\nimport '../css/FilterCard.css';\nimport stock from '../apis/stock';\nimport { FaChartBar } from 'react-icons/fa';\n\nclass FilterCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validator_start_date: '',\n      validator_end_date: ''\n    };\n\n    this.start_dateValidator = val => {\n      let current_date = new Date();\n      this.setState({\n        validator_start_date: val\n      }, () => {\n        if (Date.parse(this.state.validator_start_date) < Date.parse(this.state.validator_end_date) && Date.parse(this.state.validator_start_date) < current_date && Date.parse(this.state.validator_end_date) < current_date) {\n          document.querySelector(\".btn-filter\").disabled = false;\n        } else {\n          document.querySelector(\".btn-filter\").disabled = true;\n        }\n      });\n    };\n\n    this.end_dateValidator = val => {\n      let current_date = new Date();\n      this.setState({\n        validator_end_date: val\n      }, () => {\n        if (Date.parse(this.state.validator_start_date) < Date.parse(this.state.validator_end_date) && Date.parse(this.state.validator_end_date) < current_date) {\n          document.querySelector(\".btn-filter\").disabled = false;\n        } else {\n          document.querySelector(\".btn-filter\").disabled = true;\n        }\n\n        ;\n      });\n    };\n\n    this.filterMyChart = async () => {\n      let stockValue = document.querySelector(\".filter-select\").value;\n      let startDate = new Date(document.querySelector(\"input.start-date\").value) / 1000;\n      let endDate = new Date(document.querySelector(\"input.end-date\").value) / 1000;\n      const graph_response = await stock.get('/stock/candle', {\n        params: {\n          symbol: stockValue,\n          resolution: 5,\n          from: startDate,\n          to: endDate,\n          token: 'bqhq9i7rh5rbubolrqd0'\n        }\n      });\n      this.props.getFilteredData([startDate, endDate], {\n        stockValue: stockValue,\n        response: graph_response.data\n      });\n      document.querySelector(\"input.start-date\").value = '';\n      document.querySelector(\"input.end-date\").value = '';\n    };\n  }\n\n  // @desc: componentDidUpate checks to see if the showFilterDOM is\n  //        triggered. This is triggered when the API call is done and\n  //        disables the button as default.\n  componentDidUpdate() {\n    if (this.props.showFilterDOM) {\n      document.querySelector(\".btn-filter\").disabled = true;\n    }\n\n    ;\n  }\n\n  render() {\n    let optionSelectDOM = ''; // @dom: show all the stock values and put it into the select DOM\n\n    optionSelectDOM = this.props.showGraphData.map((graphData, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: graphData.stockValue,\n        key: index,\n        defaultValue: this.props.showGraphData[this.props.showGraphData.length - 1] === graphData ? \"defaultValue\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, graphData.stockValue);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-container filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"h6 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"Filter by Stock Code:\"), this.props.showFilterDOM ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select filter-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, optionSelectDOM), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex filter-card-date mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-card-date-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }, \"Start Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control start-date\",\n      type: \"date\",\n      onChange: e => this.start_dateValidator(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-card-date-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, \"End Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control end-date\",\n      type: \"date\",\n      onChange: e => this.end_dateValidator(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary w-100 mt-3 btn-filter\",\n      onClick: this.filterMyChart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, \"Filter\", /*#__PURE__*/React.createElement(FaChartBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 126\n      }\n    }))) : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 no-filter-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 27\n      }\n    }, \"No Stock Code to Filter. Please search stock code for more details\")));\n  }\n\n}\n\n;\nexport default FilterCard;","map":{"version":3,"sources":["/Users/zhigangdeng/Projects/react-stock-dashboard/src/components/FilterCard.js"],"names":["React","stock","FaChartBar","FilterCard","Component","state","validator_start_date","validator_end_date","start_dateValidator","val","current_date","Date","setState","parse","document","querySelector","disabled","end_dateValidator","filterMyChart","stockValue","value","startDate","endDate","graph_response","get","params","symbol","resolution","from","to","token","props","getFilteredData","response","data","componentDidUpdate","showFilterDOM","render","optionSelectDOM","showGraphData","map","graphData","index","length","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../css/styles.css';\nimport '../css/FilterCard.css';\nimport stock from '../apis/stock';\nimport { FaChartBar } from 'react-icons/fa';\n\nclass FilterCard extends React.Component{\n\n    state = {\n        validator_start_date: '',\n        validator_end_date: ''\n    };\n\n    // @desc: componentDidUpate checks to see if the showFilterDOM is\n    //        triggered. This is triggered when the API call is done and\n    //        disables the button as default.\n    componentDidUpdate(){\n        if(this.props.showFilterDOM){\n            document.querySelector(\".btn-filter\").disabled = true;\n        };\n    };\n\n    // @desc: start_dateValidator checks for the date of the first date input.\n    //        It also checks for its current date and if the endDate is later\n    //        than the current Date and before the start date it disables the button.\n\n    // @params: val => the value of the date in string (e.g. 2020-05-03)\n    start_dateValidator = (val) => {\n        let current_date = new Date();\n\n        this.setState({\n            validator_start_date: val\n        }, () => {\n            if(Date.parse(this.state.validator_start_date) < Date.parse(this.state.validator_end_date) \n                && Date.parse(this.state.validator_start_date) < current_date\n                && Date.parse(this.state.validator_end_date) < current_date){\n                document.querySelector(\".btn-filter\").disabled = false;\n            }else{\n                document.querySelector(\".btn-filter\").disabled = true;\n            }\n        });\n    };\n\n    // @desc: end_dateValidator checks for the date of the second date input.\n    //        It also checks for its current date and if the startDate is later\n    //        than the current Date and after the start date it disables the button.\n\n    // @params: val => the value of the date in string (e.g. 2020-05-03)\n    end_dateValidator = (val) => {\n        let current_date = new Date();\n    \n        this.setState({\n            validator_end_date: val\n        }, () => {\n            if(Date.parse(this.state.validator_start_date) < Date.parse(this.state.validator_end_date) \n                && Date.parse(this.state.validator_end_date) < current_date){\n                document.querySelector(\".btn-filter\").disabled = false;\n            }else{\n                document.querySelector(\".btn-filter\").disabled = true;\n            };\n        });\n    };\n\n    // @desc: filterMyChart is a button trigger which checks for the start and end\n    //        date and the stock code value. This runs an API calls and sends it\n    //        back up as props in App.js, and also resets the start and end date.\n    filterMyChart = async () => {\n        let stockValue = document.querySelector(\".filter-select\").value;\n        let startDate = new Date(document.querySelector(\"input.start-date\").value)/1000;\n        let endDate = new Date(document.querySelector(\"input.end-date\").value)/1000;\n\n        const graph_response = await stock.get('/stock/candle', {\n            params: {\n              symbol: stockValue,\n              resolution: 5,\n              from: startDate,\n              to: endDate,\n              token: 'bqhq9i7rh5rbubolrqd0'\n            }\n        });\n\n        this.props.getFilteredData([startDate, endDate], {stockValue: stockValue, response: graph_response.data});\n        document.querySelector(\"input.start-date\").value = '';\n        document.querySelector(\"input.end-date\").value = '';\n    };\n\n    render(){\n        let optionSelectDOM = '';\n\n        // @dom: show all the stock values and put it into the select DOM\n        optionSelectDOM = this.props.showGraphData.map((graphData, index) => {\n            return (\n                <option \n                    value={ graphData.stockValue } \n                    key={ index }\n                    defaultValue={ this.props.showGraphData[this.props.showGraphData.length - 1] === graphData ? \"defaultValue\" : \"\" }>\n                        { graphData.stockValue }\n                </option>\n            )\n        });\n\n        return (\n            <div className=\"card card-container filter\">\n                <div className=\"card-body\">\n                    <h2 className=\"h6 mb-2\">Filter by Stock Code:</h2>\n                    { \n                        this.props.showFilterDOM \n                        ? \n                        <div>\n                            <select className=\"custom-select filter-select\">\n                                { optionSelectDOM }\n                            </select>\n                            <div className=\"d-flex filter-card-date mt-2\">\n                                <div className=\"filter-card-date-div\">\n                                    <label className=\"mb-0\">Start Date:</label>\n                                    <input className=\"form-control start-date\" type=\"date\" onChange={ (e) => this.start_dateValidator(e.target.value) }></input>\n                                </div>\n                                <div className=\"filter-card-date-div\">\n                                    <label className=\"mb-0\">End Date:</label>\n                                    <input className=\"form-control end-date\" type=\"date\" onChange={ (e) => this.end_dateValidator(e.target.value) }></input>\n                                </div>\n                            </div>\n                            <button className=\"btn btn-secondary w-100 mt-3 btn-filter\" onClick={ this.filterMyChart }>Filter<FaChartBar/></button>\n                        </div>\n                        : <p className=\"mb-0 no-filter-message\">No Stock Code to Filter. Please search stock code for more details</p>\n                    }\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default FilterCard;"]},"metadata":{},"sourceType":"module"}